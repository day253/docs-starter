// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	internal "sdk/internal"
)

type LoginUserRequest struct {
	// The username for login
	Username *string `json:"-" url:"username,omitempty"`
	// The password for login
	Password *string `json:"-" url:"password,omitempty"`
}

type User struct {
	Id       *int    `json:"id,omitempty" url:"id,omitempty"`
	Username *string `json:"username,omitempty" url:"username,omitempty"`
	Email    *string `json:"email,omitempty" url:"email,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (u *User) GetId() *int {
	if u == nil {
		return nil
	}
	return u.Id
}

func (u *User) GetUsername() *string {
	if u == nil {
		return nil
	}
	return u.Username
}

func (u *User) GetEmail() *string {
	if u == nil {
		return nil
	}
	return u.Email
}

func (u *User) GetExtraProperties() map[string]interface{} {
	return u.extraProperties
}

func (u *User) UnmarshalJSON(data []byte) error {
	type unmarshaler User
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*u = User(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *u)
	if err != nil {
		return err
	}
	u.extraProperties = extraProperties
	u.rawJSON = json.RawMessage(data)
	return nil
}

func (u *User) String() string {
	if len(u.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(u.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(u); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", u)
}

type UserAuthResponse struct {
	// Authentication token
	Token *string `json:"token,omitempty" url:"token,omitempty"`
	// Token expiration time in seconds
	ExpiresIn *int `json:"expiresIn,omitempty" url:"expiresIn,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (u *UserAuthResponse) GetToken() *string {
	if u == nil {
		return nil
	}
	return u.Token
}

func (u *UserAuthResponse) GetExpiresIn() *int {
	if u == nil {
		return nil
	}
	return u.ExpiresIn
}

func (u *UserAuthResponse) GetExtraProperties() map[string]interface{} {
	return u.extraProperties
}

func (u *UserAuthResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler UserAuthResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*u = UserAuthResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *u)
	if err != nil {
		return err
	}
	u.extraProperties = extraProperties
	u.rawJSON = json.RawMessage(data)
	return nil
}

func (u *UserAuthResponse) String() string {
	if len(u.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(u.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(u); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", u)
}
